name: CI

on: [create, pull_request, push]

env:
  IMAGE_ID: ${{ github.repository }}

jobs:
  docker:
    name: Docker
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5

      - name: Docker Buildx setup
        id: buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0

      - name: Registry login
        if: github.event_name != 'pull_request'
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USER_NAME }}" --password-stdin

      - name: Build
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          # Push the Docker image to the registry on git pushes that either pushed a tag or one of the following branches: [master, develop]
          if [[
            (
              "${{ github.event_name }}" == "create"
              &&
              ${{ startsWith(github.ref, 'refs/tags/') }} == "true"
            )
            ||
            (
              "${{ github.event_name }}" == "push"
              &&
              ${{ startsWith(github.ref, 'refs/heads/') }} == "true"
              &&
              (
                $VERSION == "latest"
                ||
                $VERSION == "develop"
              )
            )
          ]]
          then
            docker buildx build \
              --cache-from=$IMAGE_ID:cache \
              --cache-to=$IMAGE_ID:cache \
              --push \
              -t $IMAGE_ID:$VERSION \
              .
          else
            docker buildx build \
              --cache-from=$IMAGE_ID:cache \
              -t $IMAGE_ID:$VERSION \
              .
          fi
